#include <iostream>
using namespace std;

class Complex {
private:
    double real;
    double imag;

public:
    Complex(double r=0.0, double i=0.0) {
        real = r;
        imag = i;
    }

    Complex operator+(const Complex& other) const {
        return Complex(real + other.real, imag + other.imag);
    }

    Complex operator-(const Complex& other) const {
        return Complex(real - other.real, imag - other.imag);
    }

    Complex operator*(const Complex& other) const {
        return Complex(real * other.real - imag * other.imag, real * other.imag + imag * other.real);
    }

    Complex operator/(const Complex& other) const {
        double denominator = other.real * other.real + other.imag * other.imag;
        double realPart = (real * other.real + imag * other.imag) / denominator;
        double imagPart = (imag * other.real - real * other.imag) / denominator;
        return Complex(realPart, imagPart);
    }

    friend ostream& operator<<(ostream& out, const Complex& c);

    friend double magnitude(const Complex& c);

    static double customSqrt(double number) {
        if (number<0) return -1; 
        double guess=number;
        double epsilon=0.00001; 

        while ((guess * guess - number) > epsilon || (guess * guess - number) < -epsilon) {
            guess=(guess+number/guess)/2.0;
        }
        return guess;
    }
};

ostream& operator<<(ostream& out, const Complex& c) {
    out<<"("<<c.real<<(c.imag>=0 ? "+" : "")<<c.imag<< "i)";
    return out;
}

double magnitude(const Complex& c) {
    return Complex::customSqrt(c.real * c.real + c.imag * c.imag);
}

int main() {
    Complex c1(4, 3);
    Complex c2(2, -2);

    cout<<"Number 1: "<<c1<<endl;
    cout<<"Number 2: "<<c2<<endl;

    Complex sum=c1+c2;
    Complex diff=c1-c2;
    Complex prod=c1*c2;
    Complex div=c1/c2;
    
    cout<<"Sum: "<<sum<<endl;
    cout<<"Difference: "<<diff<<endl;
    cout<<"Product: "<<prod<<endl;
    cout<<"Division: "<<div<<endl;

    cout<<"Magnitude of "<<c1<<" = "<<magnitude(c1)<<endl;
    cout<<"Magnitude of "<<c2<<" = "<<magnitude(c2)<<endl;

    return 0;
}
