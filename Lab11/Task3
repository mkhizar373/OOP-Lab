#include <iostream>
#include <exception>
using namespace std;

class InvalidTemperatureException : public exception {
public:
    const char* what() const noexcept override {
        return "std::exception";
    }
};

template <typename T>
T convertToFahrenheit(T celsius) {
    if (celsius < -273.15) {  
        throw InvalidTemperatureException();  
    }
    return (celsius*9.0/5.0)+32;  
}

int main() {
    try {
        double celsius = 300.0;  
        cout<<"Attempting to convert "<<celsius<<"C"<<endl;

        double fahrenheit = convertToFahrenheit(celsius);
        cout<<celsius<<"C is equal to "<<fahrenheit<<"F"<<endl;
    } catch (const InvalidTemperatureException& e) {
        cout<<"Caught InvalidTemperatureException: "<<e.what()<<endl;
    }

    try {
        double celsius = -300.0;  
        cout<<"Attempting to convert "<<celsius<<"C"<<endl;

        double fahrenheit = convertToFahrenheit(celsius);  
        cout<<celsius<<"C is equal to "<<fahrenheit<<"F"<<endl;
    } catch (const InvalidTemperatureException& e) {
        cout<<"Caught InvalidTemperatureException: "<<e.what()<<endl;
    }

    return 0;
}
